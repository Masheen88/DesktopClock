<Window x:Class="DesktopClock.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DesktopClock"
        xmlns:p="clr-namespace:DesktopClock.Properties"
        mc:Ignorable="d"
        Title="DesktopClock"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStyle="None"
        ResizeMode="NoResize"
        SizeToContent="WidthAndHeight"
        UseLayoutRounding="True"
        Topmost="{Binding Topmost, Source={x:Static p:Settings.Default}, Mode=TwoWay}"
        ShowInTaskbar="{Binding ShowInTaskbar, Source={x:Static p:Settings.Default}, Mode=TwoWay}"
        FontFamily="{Binding FontFamily, Source={x:Static p:Settings.Default}, Mode=OneWay}"
        MouseDown="Window_MouseDown"
        MouseDoubleClick="Window_MouseDoubleClick"
        MouseWheel="Window_MouseWheel"
        SourceInitialized="Window_SourceInitialized"
        Closing="Window_Closing">
	<Window.DataContext>
		<local:MainViewModel />
	</Window.DataContext>

	<Window.ContextMenu>
		<ContextMenu>
			<MenuItem Click="MenuItemCopy_OnClick" Header="_Copy" />

			<Separator />

			<MenuItem Header="Stay on _top"
			          IsCheckable="True"
			          IsChecked="{Binding Topmost, Source={x:Static p:Settings.Default}, Mode=TwoWay}" />

			<MenuItem Header="Show tas_kbar icon"
			          IsCheckable="True"
			          IsChecked="{Binding ShowInTaskbar, Source={x:Static p:Settings.Default}, Mode=TwoWay}" />

			<MenuItem Header="Start with _PC"
			          IsCheckable="True"
			          IsChecked="{Binding RunOnStartup, Source={x:Static p:Settings.Default}, Mode=TwoWay}" />

			<MenuItem Header="Show _background"
			          IsCheckable="True"
			          IsChecked="{Binding BackgroundEnabled, Source={x:Static p:Settings.Default}, Mode=TwoWay}" />

			<MenuItem>
				<MenuItem.Header>
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="Size: " />

						<Slider Width="80"
						        AutoToolTipPlacement="TopLeft"
						        IsSnapToTickEnabled="True"
						        Maximum="160"
						        Minimum="16"
						        Value="{Binding Height, Source={x:Static p:Settings.Default}, Mode=TwoWay}" />
					</StackPanel>
				</MenuItem.Header>
			</MenuItem>

			<MenuItem Header="T_heme" ItemsSource="{x:Static local:App.Themes}">
				<MenuItem.Resources>
					<Style TargetType="MenuItem">
						<Setter Property="Command" Value="{Binding DataContext.SetThemeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />

						<Setter Property="CommandParameter" Value="{Binding}" />

						<Setter Property="DisplayMemberPath" Value="Name" />
					</Style>
				</MenuItem.Resources>
			</MenuItem>

			<MenuItem Header="Time _Zone" ItemsSource="{x:Static local:DateTimeUtil.TimeZones}">
				<MenuItem.Resources>
					<Style TargetType="MenuItem">
						<Setter Property="Command" Value="{Binding DataContext.SetTimeZoneCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />

						<Setter Property="CommandParameter" Value="{Binding}" />
					</Style>
				</MenuItem.Resources>
			</MenuItem>

			<MenuItem Header="_Format" ItemsSource="{x:Static local:DateTimeUtil.DateTimeFormatsAndExamples}">
				<MenuItem.Resources>
					<Style TargetType="MenuItem">
						<Setter Property="Command" Value="{Binding DataContext.SetFormatCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />

						<Setter Property="CommandParameter" Value="{Binding Key}" />

						<Setter Property="DisplayMemberPath" Value="Value" />
					</Style>
				</MenuItem.Resources>
			</MenuItem>

			<Separator />

			<MenuItem Click="MenuItemNew_OnClick" Header="_New clock..." />

			<MenuItem Click="MenuItemCountdown_OnClick" Header="_Countdown to..." />

			<MenuItem Click="MenuItemSettings_OnClick" Header="Advanced _settings..." />

			<MenuItem Click="MenuItemCheckForUpdates_OnClick" Header="Check for _updates..." />

			<MenuItem Click="MenuItemExit_OnClick" Header="E_xit" />
		</ContextMenu>
	</Window.ContextMenu>

	<Viewbox Height="{Binding Height, Source={x:Static p:Settings.Default}, Mode=OneWay}">
		<Border CornerRadius="1">
			<Border.Style>
				<Style TargetType="Border">
					<Setter Property="Background">
						<Setter.Value>
							<SolidColorBrush Opacity="{Binding BackgroundOpacity, Source={x:Static p:Settings.Default}, Mode=OneWay}" Color="{Binding OuterColor, Source={x:Static p:Settings.Default}, Mode=OneWay}" />
						</Setter.Value>
					</Setter>

					<Style.Triggers>
						<DataTrigger Binding="{Binding BackgroundEnabled, Source={x:Static p:Settings.Default}, Mode=OneWay}" Value="False">
							<DataTrigger.Setters>
								<Setter Property="Background" Value="Transparent" />
							</DataTrigger.Setters>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Border.Style>

			<local:OutlinedTextBlock x:Name="TimeTextBlock"
			                         Margin="1,0,1,0"
			                         HorizontalAlignment="Center"
			                         Text="{Binding CurrentTimeOrCountdownString}"
			                         StrokeThickness="0.2">

				<local:OutlinedTextBlock.Fill>
					<SolidColorBrush Color="{Binding TextColor, Source={x:Static p:Settings.Default}, Mode=OneWay}" />
				</local:OutlinedTextBlock.Fill>

				<local:OutlinedTextBlock.Style>
					<Style TargetType="local:OutlinedTextBlock">
						<Setter Property="Stroke" Value="Transparent" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding BackgroundEnabled, Source={x:Static p:Settings.Default}, Mode=OneWay}" Value="False">
								<DataTrigger.Setters>
									<Setter Property="Stroke">
										<Setter.Value>
											<SolidColorBrush Color="{Binding OuterColor, Source={x:Static p:Settings.Default}, Mode=OneWay}" />
										</Setter.Value>
									</Setter>
								</DataTrigger.Setters>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</local:OutlinedTextBlock.Style>
			</local:OutlinedTextBlock>
		</Border>
	</Viewbox>
</Window>
